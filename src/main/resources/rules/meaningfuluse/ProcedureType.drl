/*
 * Copyright 2010 OpenHealthData, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.

 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 #created on: Jun 10, 2010
package org.astm.ccr.rules.meaningfuluse

#list any import classes here.
import java.util.List;
import org.astm.ccr.ProcedureType;
import org.astm.ccr.CodedDescriptionType;
import org.astm.ccr.CodeType;

import org.openhealthdata.validation.result.ValidationResultManager;
import org.openhealthdata.validation.result.TestResultType;
import org.openhealthdata.validation.result.ErrorType;

#declare any global variables here
global ValidationResultManager val_result;



rule "MU - Procedure description MUST be coded in either ICD9-CM, or CPT-4"
@title ("Procedure description must be coded in either ICD9-CM, or CPT-4")
@testid ("5978f3c2-f7ae-47f9-aa6a-4c3809db3729")
@description ("Checks to see if Procedure description has at least one code with a CodingSystem of either ICD9-CM or CPT-4. As referenced in 42CFR-Part 162.1002(a)(2) and (5)")
@source ("RIN 0991-AB58 Sec 170.205(2)(ii)(A) and (B)")
@profile ("RIN 0991-AB58")
@author ("openhealthdata")
	when
		$p: ProcedureType( $d:description )
		CodedDescriptionType( this == $d, $c:code )
		not (CodeType( codingSystem in ("ICD9-CM", "ICD9CM", "CPT4", "CPT-4") ) from $c)
	then
		String testid = drools.getRule().getMetaAttribute("testid");
		String title = drools.getRule().getMetaAttribute("title");
		String description = drools.getRule().getMetaAttribute("description");
		String source = drools.getRule().getMetaAttribute("source");
		String profile = drools.getRule().getMetaAttribute("profile"); 
		val_result.addTest(
			testid,
			title,
			description+ " Source: "+
			source,
			TestResultType.FAILED, profile);
		ErrorType e = new ErrorType();
		e.setMessage("Procedure ["+$p.getCCRDataObjectID()+"] does not appear to be coded in either ICD9-CM or CPT-4");
		e.setServerity(ErrorType.FATAL);
		val_result.addError(testid, e);
end

rule "MU - No Procedure Found in CCR"
@title ("Procedure must be supported by the certified EHR technology but are not required for each CCR")
@testid ("f9fdf3f6-5c66-4e9f-ba2c-d57fbe294567")
@description ("Checks to see if Procedures are provided in the CCR")
@source ("RIN 0991-AB58 Sec 170.205(2)(ii)")
@profile ("RIN 0991-AB58")
@author ("openhealthdata")
	when
		not $p: ProcedureType()
	then
		String testid = drools.getRule().getMetaAttribute("testid");
		String title = drools.getRule().getMetaAttribute("title");
		String description = drools.getRule().getMetaAttribute("description");
		String source = drools.getRule().getMetaAttribute("source");
		String profile = drools.getRule().getMetaAttribute("profile"); 
		val_result.addTest(
			testid,
			title,
			description+ " Source: "+
			source,
			TestResultType.PASSED, profile);
		ErrorType e = new ErrorType();
		e.setMessage("No Procedures were found therefore cannot evaluate compliance with Procedure criteria");
		e.setServerity(ErrorType.WARN);
		val_result.addError(testid, e);
end
