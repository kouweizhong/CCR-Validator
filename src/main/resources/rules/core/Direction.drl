
/*
 * Copyright 2010 OpenHealthData, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.

 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */#created on: Apr 29, 2008
package org.astm.ccr.rules.core

#list any import classes here.

import java.util.List;
import org.astm.ccr.Direction;
import org.astm.ccr.CodedDescriptionType;
import org.astm.ccr.RateType;
import org.astm.ccr.DurationType;
import org.astm.ccr.FrequencyType;
import org.astm.ccr.IndicationType;
import org.astm.ccr.IntervalType;
import org.astm.ccr.SiteType;
import org.astm.ccr.VehicleType;

#declare any global variables here




rule "ccr Direction - AdministrationTiming"
	when
		$d: Direction($at:administrationTiming)
		List (this == $at, size > 0)
	then
		for (Direction.AdministrationTiming at : $d.getAdministrationTiming()){
			insert(at);
		}
end

rule "ccr Direction - Dose"
	when
		$d:Direction($ds:dose)
		List (this == $ds, size >0)
	then
		for (Direction.Dose ds : $d.getDose()){
			insert(ds);
			for (RateType rt : ds.getRate()){
				insert(rt);
			}
			if (ds.getVariableDoseModifier() != null){
				insert(ds.getVariableDoseModifier());
			}
		}
end

rule "ccr Direction - deliveryMethod"
	when
		Direction($dm:deliveryMethod != null)
	then
		insert($dm);
end

rule "ccr Direction - description"
	when
		Direction($d:description != null)
	then
		insert($d);
end

rule "ccr Direction - doseCalculation"
	when
		$d:Direction($dc:doseCalculation)
		List(this == $dc, size >0)
	then
		for (Direction.DoseCalculation dc : $d.getDoseCalculation()){
			insert(dc);
			for (RateType rt : dc.getRate()){
				insert(rt);
			}
			if (dc.getVariableCalculationModifier() != null){
				insert(dc.getVariableCalculationModifier());
			}
		}
end

rule "ccr Direction - doseIndicator"
	when
		Direction($di:doseIndicator != null)
	then
		insert($di);
end

rule "ccr Direction - doseRestriction"
	when
		$d:Direction ($dr:doseRestriction)
		List(this == $dr, size >0)
	then
		for(Direction.DoseRestriction dr : $d.getDoseRestriction()){
			insert(dr);
			for (RateType rt : dr.getRate()){
				insert(rt);
			}
			if (dr.getVariableRestrictionModifier() != null){
				insert(dr.getVariableRestrictionModifier());
			}
		}
end

rule "ccr Direction - duration"
	when
		// "duration" is a reserved word so just check for a Direction
		$d:Direction()
	then
		if ($d.getDuration().size() > 0){
			for (DurationType dt : $d.getDuration()){
				insert(dt);
			}
		}
end

rule "ccr Direction - frequency"
	when
		$d:Direction($f:frequency)
		List (this == $f, size >0)
	then
		for (FrequencyType ft : $d.getFrequency()){
			insert(ft);
		}
end

rule "ccr Direction - indication"
	when
		$d: Direction($i:indication)
		List(this == $i, size >0)
	then
		for (IndicationType it : $d.getIndication()){
			insert(it);
		}
end

rule "ccr Direction - interval"
	when
		$d:Direction($i:interval)
		List(this == $i, size >0)
	then
		for (IntervalType it : $d.getInterval()){
			insert(it);
		}
end

rule "ccr Direction - multipledirectionModifier"
	when
		Direction ($m:multipleDirectionModifier != null)
	then
		insert($m);
end

rule "ccr Direction - route"
	when
		$d: Direction($r:route)
		List(this == $r, size >0)
	then
		for (Direction.Route r : $d.getRoute()){
			insert(r);
			if (r.getMultipleRouteModifier() != null){
				insert(r.getMultipleRouteModifier());
			}
		}
end

rule "ccr Direction - site"
	when
		$d:Direction($s:site)
		List(this == $s, size >0)
	then
		for (SiteType s : $d.getSite()){
			insert(s);
		}
end

rule "ccr Direction - stopIndicator"
	when
		Direction($s:stopIndicator != null)
	then
		insert($s);
end

rule "ccr Direction - vehicle"
	when
		$d:Direction($v:vehicle)
		List (this == $v, size >0)
	then
		for(VehicleType v : $d.getVehicle()){
			insert(v);		
		}
end