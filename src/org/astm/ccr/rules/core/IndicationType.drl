/*
 * Copyright 2010 OpenHealthData, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.

 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 #created on: Apr 29, 2008
package org.astm.ccr.rules.core

#list any import classes here.
import java.util.List;
import org.astm.ccr.IndicationType;
import org.astm.ccr.CodedDescriptionType;
import org.astm.ccr.InternalCCRLink;
import org.astm.ccr.SourceType;
import org.astm.ccr.ProblemType;


#declare any global variables here


rule "ccr IndicationType - description"
	when
		$i:IndicationType($d:description)
		List(this == $d, size >0)
	then
		for(CodedDescriptionType c : $i.getDescription()){
			insert(c);
		}
end

rule "ccr IndicationType - internalccrlink"
	when
		$i:IndicationType($l:internalCCRLink)
		List(this == $l, size >0)
	then
		for(InternalCCRLink l : $i.getInternalCCRLink()){
			insert(l);
		}
end

rule "ccr IndicationType - multiplindicationmodifier"
	when
		IndicationType($m:multipleIndicationModifier != null)
	then
		insert($m);
end

rule "ccr IndicationType - physiologicalparameter"
	when
		$i:IndicationType($p:physiologicalParameter)
		List(this == $p, size >0)
	then
		for (IndicationType.PhysiologicalParameter p : $i.getPhysiologicalParameter()){
			insert(p);
			if(p.getVariableParameterModifier() != null){
				insert(p.getVariableParameterModifier());
			}
		}
end

rule "ccr IndicationType - prnflag"
	when
		IndicationType($p:PRNFlag != null)
	then
		insert($p);
end

rule "ccr IndicationType - problem"
	when
		$i:IndicationType($p: problem)
		List(this == $p, size >0)
	then
		for (ProblemType p : $i.getProblem()){
			insert(p);
		}
end

rule "ccr IndicationType - source"
	when
		$i:IndicationType($s:source)
		List(this == $s, size >0)
	then
		for(SourceType s : $i.getSource()){
			insert(s);
		}
end